--Proyecto

CREATE TABLE TBnino (
cedulaNino NUMBER NOT NULL, 
nombreNino VARCHAR2(20) NOT NULL,
primerApellidoNino VARCHAR2(20) NOT NULL,
segundoApellidoNino VARCHAR2(20) NOT NULL,
fechaNacimiento DATE NOT NULL,
fechaIngreso DATE DEFAULT SYSDATE NOT NULL,
fechaBaja DATE,
CONSTRAINT PKTBnino PRIMARY KEY(cedulaNino)
);
-------------------------------------------------------

CREATE TABLE TBautorizado (
cedulaAutorizado NUMBER NOT NULL, 
nombreAutorizado VARCHAR2(20) NOT NULL,
primerApellidoAutorizado VARCHAR2(20) NOT NULL,
segundoApellidoAutorizado VARCHAR2(20) NOT NULL,
direccion VARCHAR2(50),
telefono NUMBER NOT NULL,
responsablePago CHAR(1),
CONSTRAINT PKTBautorizado PRIMARY KEY(cedulaAutorizado));
-------------------------------------------------------
--DROP TABLE TBautorizado;
--GENERATED BY DEFAULT ON NULL AS IDENTITY

CREATE TABLE TBrelacionAutorizacion (
idRelacion NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
cedulaNino NUMBER NOT NULL,
cedulaAutorizado NUMBER NOT NULL,
relacion VARCHAR2(20) NOT NULL,
CONSTRAINT PKTBrelacionAutorizacion PRIMARY KEY(idRelacion),
CONSTRAINT FKTBrelacionAutorizacionNino FOREIGN KEY (cedulaNino) REFERENCES TBnino(cedulaNino),
CONSTRAINT FKTBrelacionAutorizacionAutorizado FOREIGN KEY (cedulaAutorizado) REFERENCES TBautorizado(cedulaAutorizado)
);
-------------------------------------------------------

CREATE TABLE TBpago (
idPago NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
cedulaAutorizado NUMBER NOT NULL,
montoMensualFijo NUMBER NOT NULL,
numeroCuenta VARCHAR2(50),
CONSTRAINT PKTBpago PRIMARY KEY(idPago),
CONSTRAINT FKTBpago FOREIGN KEY (cedulaAutorizado) REFERENCES TBautorizado(cedulaAutorizado)
);
-------------------------------------------------------

CREATE TABLE TBmenu (
idMenu NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
nombre VARCHAR2(80) NOT NULL,
CONSTRAINT PKTBmenu PRIMARY KEY(idMenu)
);
-------------------------------------------------------

CREATE TABLE TBplato (
idPlato NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
nombre VARCHAR2(80) NOT NULL,
CONSTRAINT PKTBplato PRIMARY KEY(idPlato)
);
-------------------------------------------------------

CREATE TABLE TBingrediente (
idIngrediente NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
nombre VARCHAR2(80) NOT NULL,
CONSTRAINT PKTBingrediente PRIMARY KEY(idIngrediente)
);
-------------------------------------------------------

CREATE TABLE TBplatoIngrediente (
idPlatoIngrediente NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
idPlato NUMBER NOT NULL,
idIngrediente NUMBER NOT NULL,
CONSTRAINT PKTBplatoIngrediente PRIMARY KEY(idPlatoIngrediente),
CONSTRAINT FKplatoIngrediente1 FOREIGN KEY (idPlato) REFERENCES TBplato(idPlato),
CONSTRAINT FKplatoIngrediente2 FOREIGN KEY (idIngrediente) REFERENCES TBingrediente(idIngrediente)
);
-------------------------------------------------------

CREATE TABLE TBmenuPlato (
idMenuPlato NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
idPlato NUMBER NOT NULL,
idMenu NUMBER NOT NULL,
CONSTRAINT PKTBmenuPlato PRIMARY KEY(idmenuPlato),
CONSTRAINT FKmenuPlato1 FOREIGN KEY (idPlato) REFERENCES TBplato(idPlato),
CONSTRAINT FKmenuPlato2 FOREIGN KEY (idMenu) REFERENCES TBmenu(idMenu)
);
-------------------------------------------------------

CREATE TABLE TBalergia (
idAlergia NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
cedulaNino NUMBER NOT NULL,
idIngrediente NUMBER NOT NULL,
CONSTRAINT PKTBalergia PRIMARY KEY(idAlergia),
CONSTRAINT FKalergiaNino FOREIGN KEY (cedulaNino) REFERENCES TBnino(cedulaNino),
CONSTRAINT FKalergiaIngrediente FOREIGN KEY (idIngrediente) REFERENCES TBingrediente(idIngrediente)
);
-------------------------------------------------------

CREATE TABLE TBconsumo (
idConsumo NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, 
cedulaNino NUMBER NOT NULL,
idMenu NUMBER NOT NULL,
fechaConsumo DATE NOT NULL,
CONSTRAINT PKTBconsumo PRIMARY KEY(idConsumo),
CONSTRAINT FKconsumoNino FOREIGN KEY (cedulaNino) REFERENCES TBnino(cedulaNino),
CONSTRAINT FKconsumoMenu FOREIGN KEY (idMenu) REFERENCES TBmenu(idMenu)
);
-------------------------------------------------------
